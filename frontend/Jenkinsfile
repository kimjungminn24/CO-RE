pipeline {
    agent any
    environment {
        REMOTE_USER = 'ubuntu'
        REMOTE_SERVER_IP = credentials("deployServerIP")
        MATTERMOST_URL = credentials("mattermost-url")
        BUILD_DIR = 'frontend'
    }

    stage('Notify Start') {
        steps {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Email = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()

                mattermostSend(
                    color: '#CDC1FF',
                    message: ":hungry_koongya: 빌드 시작: ${env.JOB_NAME} #${env.BUILD_NUMBER} \n(<${env.BUILD_URL}|Details>)",
                    endpoint: MATTERMOST_URL, 
                    channel: 'jenkins'
                )
            }
        }
    }

    stages {
        stage('Install Dependencies') {
            steps {
                dir('frontend') {
                    sh 'npm ci'
                }
            }
        }

        stage('Build') {
            steps {
                dir('frontend') {
                    sh 'npm run build'
                }
            }
        }
        
        stage('Deploy') {
            steps {
                sshagent(credentials: ['remote-server']) {
                    sh "rsync -avz -e 'ssh -o StrictHostKeyChecking=no' ./frontend/dist/ ${REMOTE_USER}@${REMOTE_SERVER_IP}:/var/www/core"
                }
            }
        }
    }

    post { 
        success {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Email = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend(
                    color: '#BFECFF', 
                    message: "빌드 성공: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_Name} (${Author_Email})\n(<${env.BUILD_URL}|Details>)",
                    endpoint: MATTERMOST_URL, 
                    channel: 'jenkins'
                )
            }
        }
        failure {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Email = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend(
                    color: '#FFCCEA', 
                    message: "빌드 실패: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_Name} (${Author_Email})\n(<${env.BUILD_URL}|Details>)",
                    endpoint: MATTERMOST_URL, 
                    channel: 'jenkins'
                )
            }
        }
    }
}
