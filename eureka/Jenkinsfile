pipeline {
    agent any
    environment {
        REMOTE_USER = 'ubuntu'
        REMOTE_SERVER_IP = credentials("deployServerIP")
        MATTERMOST_URL = credentials("mattermost-url")

        DOCKER_HUB_CREDENTIALS = credentials("docker-hub-credentials")
        DOCKER_IMAGE_NAME = 'algostudyy/core'
        IMAGE_TAG = 'eureka'
    }

    stages {
        stage('Notify Start') {
            steps {
                script {
                    def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Email = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()

                    mattermostSend(
                        color: '#CDC1FF',
                        message: "### :hungry_koongya: **<${env.BUILD_URL}|Eureka #${env.BUILD_NUMBER}> 빌드 시작**\n\n![](https://media.giphy.com/media/JdCz7YXOZAURq/giphy.gif)",
                        endpoint: MATTERMOST_URL, 
                        channel: 'jenkins'
                    )
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('eureka') {
                    sh 'docker build -t ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        sh 'docker push ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}'
                    }
                }
            }
        }

        stage('Pull and Run on Remote Server') {
            steps {
                script {
                    sh """
                    ssh ${REMOTE_USER}@${REMOTE_SERVER_IP} << EOF
                        docker pull ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}
                        docker stop eureka-service || true
                        docker rm eureka-service || true
                        docker run -d --name eureka-service -p 8761:8761 ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}
                    EOF
                    """
                }
            }
        }
    }


    post { 
        success {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Email = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend(
                    color: '#BFECFF', 
                    message: "### :koongya_zoom_close: **<${env.BUILD_URL}|Eureka #${env.BUILD_NUMBER}> 빌드 성공!**\n\n![](https://media.giphy.com/media/jtFkrEYzGlf9xtdef0/giphy.gif)",
                    endpoint: MATTERMOST_URL, 
                    channel: 'jenkins'
                )
            }
        }
        failure {
            script {
                def Author_Name = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Email = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend(
                    color: '#FFCCEA', 
                    message: "### :onion_koongya2: **<${env.BUILD_URL}|Eureka #${env.BUILD_NUMBER}> 빌드 실패**\n\nJenkins log 확인이 필요해요.\n![](https://media.giphy.com/media/pm4VOSkAgkj3q/giphy.gif)",
                    endpoint: MATTERMOST_URL, 
                    channel: 'jenkins'
                )
            }
        }
    }
}
